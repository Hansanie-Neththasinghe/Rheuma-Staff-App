// import 'package:flutter/material.dart';
// import 'package:provider/provider.dart'; // Import Provider for state management
// import 'package:staff/models/medical_record.dart';
// import '../providers/medical_record_provider.dart'; // Import your MedicalRecordProvider

// class ViewAllMedicalRecords extends StatefulWidget {
//   final String patientId; // Patient ID to filter records

//   const ViewAllMedicalRecords({super.key, required this.patientId});

//   @override
//   State<ViewAllMedicalRecords> createState() => _ViewAllMedicalRecordsState();
// }

// class _ViewAllMedicalRecordsState extends State<ViewAllMedicalRecords> {
//   bool _isLoading = true; // Loading state

//   @override
//   void initState() {
//     super.initState();
//     // Fetch medical records for the specific patient
//     final medicalRecordProvider = Provider.of<MedicalRecordProvider>(context, listen: false);
//     medicalRecordProvider.getAllRecords(widget.patientId).then((_) {
//       setState(() {
//         _isLoading = false; // Set loading to false after data is fetched
//       });
//     });
//   }

//   @override
//   Widget build(BuildContext context) {
//     final records = Provider.of<MedicalRecordProvider>(context).records; // Get records from provider

//     return Scaffold(
//       appBar: AppBar(
//         title: const Text('Medical Records'),
//       ),
//       body: SafeArea(
//         child: _isLoading
//             ? const Center(child: CircularProgressIndicator()) // Show loading indicator
//             : records.isEmpty
//                 ? const Center(child: Text('No medical records found.')) // Handle empty records
//                 : ListView.builder(
//                     itemCount: records.length,
//                     itemBuilder: (context, index) {
//                       return Card(
//                         margin: const EdgeInsets.all(16.0),
//                         elevation: 4,
//                         child: Padding(
//                           padding: const EdgeInsets.all(16.0),
//                           child: Column(
//                             crossAxisAlignment: CrossAxisAlignment.start,
//                             children: [
//                               Text(
//                                 records[index].description,
//                                 style: const TextStyle(
//                                   fontSize: 18,
//                                   fontWeight: FontWeight.bold,
//                                 ),
//                               ),
//                               const SizedBox(height: 8),
//                               Text(
//                                 "Duration: ${records[index].duration}",
//                                 style: const TextStyle(fontSize: 16),
//                               ),
//                               const SizedBox(height: 8),
//                               Text(
//                                 "Date: ${records[index].date.toLocal()}".split(' ')[0],
//                                 style: const TextStyle(fontSize: 16),
//                               ),
//                               const SizedBox(height: 8),
//                               Text(
//                                 "Medicines: ${records[index].medicines.join(', ')}",
//                                 style: const TextStyle(fontSize: 16),
//                               ),
//                               const SizedBox(height: 8),
//                               Text(
//                                 "Generated By: ${records[index].generatedBy}",
//                                 style: const TextStyle(fontSize: 16),
//                               ),
//                             ],
//                           ),
//                         ),
//                       );
//                     },
//                   ),
//       ),
//     );
//   }
// }

import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:intl/intl.dart'; 
import '../providers/medical_record_provider.dart'; // Import your MedicalRecordProvider

class ViewAllMedicalRecords extends StatefulWidget {
  final String patientId; // Patient ID to filter records

  const ViewAllMedicalRecords({super.key, required this.patientId});

  @override
  State<ViewAllMedicalRecords> createState() => _ViewAllMedicalRecordsState();
}

class _ViewAllMedicalRecordsState extends State<ViewAllMedicalRecords> {
  bool _isLoading = true; // Loading state

  @override
  void initState() {
    super.initState();
    // Fetch medical records for the specific patient
    final medicalRecordProvider = Provider.of<MedicalRecordProvider>(context, listen: false);
    medicalRecordProvider.getAllRecords(widget.patientId).then((_) {
      setState(() {
        _isLoading = false; // Set loading to false after data is fetched
      });
    });
  }

  @override
  Widget build(BuildContext context) {
    final records = Provider.of<MedicalRecordProvider>(context).records; // Get records from provider

    // Reverse the records for display
    List reversedRecords = List.from(records.reversed);

    return Scaffold(
      appBar: AppBar(
        title: const Text('Medical Records'),
        backgroundColor: Colors.blueAccent,
      ),
      body: SafeArea(
        child: _isLoading
            ? const Center(child: CircularProgressIndicator()) // Show loading indicator
            : reversedRecords.isEmpty
                ? const Center(child: Text('No medical records found.')) // Handle empty records
                : ListView.builder(
                    itemCount: reversedRecords.length,
                    itemBuilder: (context, index) {
                      final record = reversedRecords[index]; // Get the record for the current index

                      return Card(
                        margin: const EdgeInsets.all(16.0),
                        elevation: 4,
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(15.0),
                        ),
                        child: Padding(
                          padding: const EdgeInsets.all(16.0),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              // Date Field with Icon
                              Row(
                                children: [
                                  const Icon(Icons.calendar_today, color: Colors.blueAccent),
                                  const SizedBox(width: 10),
                                  Text(
                                    "Date: ${DateFormat('yyyy-MM-dd').format(record.date)}",
                                    style: const TextStyle(
                                      fontSize: 16,
                                      fontWeight: FontWeight.bold,
                                    ),
                                  ),
                                ],
                              ),
                              const SizedBox(height: 8),
                              
                              // Divider for better separation
                              const Divider(),

                              // Description Field with Icon
                              Row(
                                children: [
                                  const Icon(Icons.description, color: Colors.blueAccent),
                                  const SizedBox(width: 10),
                                  Expanded(
                                    child: Text(
                                      record.description,
                                      style: const TextStyle(
                                        fontSize: 18,
                                        fontWeight: FontWeight.bold,
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              const SizedBox(height: 8),

                              // Divider for better separation
                              const Divider(),

                              // Duration Field with Icon
                              Row(
                                children: [
                                  const Icon(Icons.timer, color: Colors.blueAccent),
                                  const SizedBox(width: 10),
                                  Text(
                                    "Duration: ${record.duration}",
                                    style: const TextStyle(fontSize: 16),
                                  ),
                                ],
                              ),
                              const SizedBox(height: 8),

                              // Divider for better separation
                              const Divider(),

                              // Medicines Field with Icon
                              Row(
                                children: [
                                  const Icon(Icons.medical_services, color: Colors.blueAccent),
                                  const SizedBox(width: 10),
                                  Expanded(
                                    child: Text(
                                      "Medicines: ${record.medicines.join(', ')}",
                                      style: const TextStyle(fontSize: 16),
                                    ),
                                  ),
                                ],
                              ),
                              const SizedBox(height: 8),

                              // Divider for better separation
                              const Divider(),

                              // Doctor Assigned Field with Icon
                              Row(
                                children: [
                                  const Icon(Icons.person, color: Colors.blueAccent),
                                  const SizedBox(width: 10),
                                  Text(
                                    "Assigned By: ${record.generatedBy.name}",
                                    style: const TextStyle(fontSize: 16),
                                  ),
                                ],
                              ),
                            ],
                          ),
                        ),
                      );
                    },
                  ),
      ),
    );
  }
}


// import 'package:flutter/material.dart';
// import 'package:provider/provider.dart'; // Import Provider for state management
// // import 'package:staff/models/medical_record.dart';
// import '../providers/medical_record_provider.dart'; // Import your MedicalRecordProvider

// class ViewAllMedicalRecords extends StatefulWidget {
//   final String patientId; // Patient ID to filter records

//   const ViewAllMedicalRecords({super.key, required this.patientId});

//   @override
//   State<ViewAllMedicalRecords> createState() => _ViewAllMedicalRecordsState();
// }

// class _ViewAllMedicalRecordsState extends State<ViewAllMedicalRecords> {
//   bool _isLoading = true; // Loading state

//   @override
//   void initState() {
//     super.initState();
//     // Fetch medical records for the specific patient
//     final medicalRecordProvider = Provider.of<MedicalRecordProvider>(context, listen: false);
//     medicalRecordProvider.getAllRecords(widget.patientId).then((_) {
//       setState(() {
//         _isLoading = false; // Set loading to false after data is fetched
//       });
//     });
//   }

//   @override
//   Widget build(BuildContext context) {
//     final records = Provider.of<MedicalRecordProvider>(context).records; // Get records from provider
    
//     return Scaffold(
//       appBar: AppBar(
//         title: const Text('Medical Records'),
//       ),
//       body: SafeArea(
//         child: _isLoading
//             ? const Center(child: CircularProgressIndicator()) // Show loading indicator
//             : records.isEmpty
//                 ? const Center(child: Text('No medical records found.')) // Handle empty records
//                 : ListView.builder(
                  
//                     itemCount: records.length,
                    
//                     itemBuilder: (context, index) {

                      
//                       return Card(
                        
//                         margin: const EdgeInsets.all(16.0),
//                         elevation: 4,
//                         child: Padding(
//                           padding: const EdgeInsets.all(16.0),
//                           child: Column(
//                             crossAxisAlignment: CrossAxisAlignment.start,
//                             children: [
//                               // Display Date first
//                               Text(
//                                 "Date: ${records[index].date.toLocal()}".split(' ')[0],
//                                 style: const TextStyle(fontSize: 16),
//                               ),
//                               const SizedBox(height: 8),
//                               // Display Description
//                               Text(
//                                 records[index].description,
//                                 style: const TextStyle(
//                                   fontSize: 18,
//                                   fontWeight: FontWeight.bold,
//                                 ),
//                               ),
//                               const SizedBox(height: 8),
//                               // Display Duration
//                               Text(
//                                 "Duration: ${records[index].duration}",
//                                 style: const TextStyle(fontSize: 16),
//                               ),
//                               const SizedBox(height: 8),
//                               // Display Medicines
//                               Text(
//                                 "Medicines: ${records[index].medicines.join(', ')}",
//                                 style: const TextStyle(fontSize: 16),
//                               ),
//                               const SizedBox(height: 8),
//                               // Display Assigned By Doctor's Name
//                               Text(
//                                 "Assigned By: ${records[index].generatedBy.name}",
//                                 style: const TextStyle(fontSize: 16),
//                               ),
//                             ],
//                           ),
//                         ),
//                       );
//                     },
//                   ),
//       ),
//     );
//   }
// }
